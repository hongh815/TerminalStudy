- 자바 프로그래밍
1시 sql 시험 + 과제물제출
1-19장
-------------모든 프로그래밍 언어 제공 문법-----------------
1장 자바 개요와 툴 설치
2장 변수
3장 연산자
4장 조건문 반복문
------------------------------
-----------------객체지향 언어(c++, java) 문법--------------
5장 참조 타입 데이터
6장 클래스
7장 상속
8장 인터페이스
9장 inner class - x
10장 예외
-----------자바 api -------
11장 java.lang 패키지
    java.util 패키지 
12장 스레드 개념 / 자바 스레드 구현 api
- jdk 1.8
jdk 1.0 1.1
jdk 1.2 1.3 1.4 
jdk 1.5(=jdk5) 1.6 1.7
jdk 1.8~(=jdk8) ? jdk13

13장 제네릭 - o
14장 람다 - x
15장 컬렉션 = 배열, list, map, set.....
18장 입출력 네트워크
파일 저장 데이터 불러와서 
네트워크상 다른 컴퓨터 불러와서
17장 fx ? window 프로그램=gui 프로그램 ? x (2주)
웹서버 = 웹브라우저
안드로이드 스마트폰 앱 gui 
jdk 설치 실행 결과 ? 도스 - 문자형태출력

20장 db 저장 데이터 자바 불러와서 
jdbc api

1장
SQL : RDB(관계형 DB : 테이블 표현) 저장 / 조회 관련 문법 언어
자바, C, C++ , R, PYTHON: 프로그래밍 언어
: 범용 목적 컴퓨터 프로그램 만들기 위한 언어 
C, C++ :  임베디드 
R, PYTHON:빅데이터 
JAVA : 웹서버 / 안드로이드 앱

-자바 프로그래밍 언어 작성 ? 실행 과정
1> 문법 프로그램 소스 파일 작성= 텍스트 편집기
클래스명.java ? 대소문자 구분 / "aaa" 
2> 텍스트파일-이진코드파일 변환 = COMPILE 
jdk 툴 내부 명령어 제공
 c:\jdk8\bin\javac.exe
도스창 열어서
c:\test> c:\jdk8\bin\javac Hello.java
===> Hello.class 파일 생성 
3> 이진코드파일 실행 결과 출력
c:\test> c:\jdk8\bin\java Hello


1> 1995년도 소개
2>  c---> c++ -> java ? 문법 유사
3> 1950년대 시작
1980년대 ms 회사 거대-windows / ie 독점
c, c++ -> windows용 1개 / unix 1개 더 개발
apple, google,-- anti ms ? unix, linux, max, solaris , windows
1개 개발 - 모든 platform  독립적 실행 언어 제작 프로그램
hw + os = platform 
mac+java 

- 언어
언어 실행문
언어 실행x/설명-주석-comment

// 1개 라인 주석
/* 멀티 라인 
주석  */
/** 멀티 라인 
주석  */
메모장 + 도스 명령어 입력 -> 이클립스
자바 ide 툴 : 통합개발툴 = 이클립스 (메모장+도스입력)

2장 변수 : 변할 수 있는 값(=데이터) 

s.o.p("java")
s.o.p("oracle")

String s = "java";
s.o.p(s);
s= " oracle ";
s.o.p(s);

변수 종류

종류	타입	길이	
정수	byte	1byte	1byte=8bit
[1bit부호(0:양, 1:음) : 7bit값 ]
- 2^7 ~ 2^7-1
-128 ~ 127
0-100
 	short	2	[1bit부호(0:양, 1:음) : 15bit값 ]
- 2^15 ~ 2^15-1
 	int	4	[1bit부호(0:양, 1:음) : 31bit값 ]
- 2^31 ~ 2^31-1
 	long	8	[1bit부호(0:양, 1:음) : 63bit값 ]
- 2^63 ~ 2^63-1
실수	float	4	[1bit부호(0:양, 1:음) :
 [지수부][가수부] ]
3.14 --> 0.314 * 10^1
 	double	8	[1bit부호(0:양, 1:음) :
 [지수부][가수부] ]

단일
문자	char	2byte	UNICODE : 2BYTE 
char c1 = 'A'
char c2 = '가'
논리값	boolean	1byte	참 : true
거짓 : false
boolean b1 = true;
boolean b2 = false;
참/거짓 : 1BIT만 사용

컴퓨터 문자 = 대응 규칙표 이진수 
ASCII CODE-문자 1개 8BIT=1BYTE
 : 영문자+숫자+특수문자:128개:7BIT
              유럽 8BIT : 2^8=256
UNICODE ? 문자1개 16BIT=2BYTE~

              아시아 다국어 2^16=65536문자
1자리 이진수 : 1BIT
7자리 이진수 : 7BIT ? 2^7 만큼 표현 : 128

8자리 이진수 : 8BIT 

자바 표현 종류 : 정수 실수 문자 논리값 4개 표현
자바 제공 데이터타입  : 8개 표현
자바 변수 표현 문장 
데이터타입 변수명 = 값;
double pi = 3.14;
int i = 100;
char c = 'c'; (자바 문자 : char :1개 'a',    String:4개 "abcd" )
boolean b = true;
int / double / char / boolean
100 -100 
100 100.0  100.999
- 변수명/메소드명/클래스명 규칙
1> 숫자, 일반문자(영문자, 한글), 특수문자( _, $) 구성
2> 숫자 시작 불가능
3> 키워드들 이름 사용 불가
4> 대소문자 구분
5> 무제한(2^16=65536)

2.3 타입 변환
1> 데이터타입 변수명 = 값;  선언 타입 나중 변경 기회:형변환연산자: (데이터타입명)b1

byte b1 = 100; --> 최초 타입 포함 
b1 = 200;---> 값 변경 error
int i1 = (int) b1; - 대입연산 할당연산자
i1 = 200;
int i2 = 100;
double d2 = 3.14;
i2 = (int)d2; //3
1. 형변환연산자 : (데이터타입명)
2. boolean : true / false 만 값 허용
booelan 형변환 제외
int i3 = 0; // 0 or 1
boolean b3 = (boolean) i3;
3. 자동형변환: (데이터타입) 생략 가능
작은 ---> 큰 
byte -> short-> int-> long ->float-> double
char -> int-> long ->float-> double
4. 명시적형변환:(데이터타입) 생략 불가능.명시
3번 반대 
double->int
int ->char

= , (데이터타입)
(sql where salary = 1000)
+ 연산자 2가지 의미: ||
1. 문자열결합 : "String" + (정수/실수 + 정수)
"덧셈결과=" + (100 + 100) -> 덧셈결과=200
2.산술연산 덧셈 : 정수+정수, 실수+실수, 실수+정수

데이터베이스 시험
13:50 ~ 14:20 
시험 종료시각 이전에 제출하고 교육장 밖에서 대기 가능합니다.
단, 조용히 대기.

3장 연산자
- 자바연산자
문장
int i = 10;
i = i + i;

10+10


	변환	산술	비교	논리
결합	대입	조건
삼항
단항연산자	(int)3.14	++:증가
--:감소	x	not
!(10>5)
	x	?:
a?b:c
a:boolean조건식
b:true결과
c:false결과

이항연산자	x	+-*/
%:나머지	> >=
< <=
!= ==	and :
&& 
or
|| 	=
+=
*=	 
+ : 문자열 결합

1> 한 문장에서 여러 연산자 섞여있다
2> 우선순위 연산자 규칙
형변환 > 산술 (* / % > + -)>  비교 > 논리 > 조건삼항 > 대입 
() > 단항연산자 > 이항연산자(대입연산자제외) > 삼항연산자 > 대입연산자
결과 저장 = 수식 
3> 동일한 우선순위 : 왼쪽 -> 오른쪽 
4> () : 최우선


int x = 15;
- x 변수값이 10보다 크면 "크다" 출력
             10보다 작거나 같으면 "작다" 출력
String result = x > 10 ? "크다" : "작다";
s.o.p(result);
- x 변수값이 10보다 크면 0 출력
             10보다 작거나 같으면 1 출력
int result  = x > 10 ? 0 : 1;



- x 변수값이 10보다 크면 0 출력
             10보다 작거나 같으면 1.1 출력
double result = x > 10 ? 0 : 1.1;
...int ->long->float->double : "자동"형변환 
0 --> 0.0

x > 10 그리고 x <= 20
x > 10  &&  x<=20 ? "" : "" 

a=b;
비트 연산자 : & , | , ~, ^

- ++ : 증가/  increment
-- : 감소 / decrement
주어진값 + 1 / -1

int x = 5;	    x	   y
y = x++;
s.o.p(x);
s.o.p(y);	   6	   5
		
		
		

int x = 5	x	y
y = --x;	4	4
y = x--;	4	5

10 / 3; ---> 3
(double)10 / 3 --> 3.33333
(int)(3.444 / 2) ---> 1
10 % 3 ---> 1
- 16 은 3의 배수인지 알아보자
16 % 3 == 0  
- 14 은 소수인지 알아보자
prime number : 1과 자신의 수로만 나누어지는 자연수
14 % 2 == 0 ( 2개 경우 만족)


and : & , &&
true & true---> true
true & false---> false
false & true---> false
false & false---> false

true && true---> true
true && false---> false
false && 연산 x---> false
false && 연산 x --> false
===> 중간 결과 임시 메모리 저장 필요x, cpu 소모x

or : | , ||
true | true---> true
true | false---> true
false | true---> true
false | false---> false

or : | , ||
true || true---> true
true || false---> true
false || true---> true
false || false---> false
&& , ||

int a = 10;
데이터타입 변수명 = 데이터값;
메모리 




int a = 10;
int b = 20; 
a 다른데
a = b;
b = a;

b:vvv	20
a:xxx	20

s.o.p(a)//20
s.o.p(b)//10




